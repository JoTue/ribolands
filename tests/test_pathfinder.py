#!/usr/bin/env python3

import RNA
import unittest

from ribolands.pathfinder import path_flooding, local_flooding


class Test_Pathflooding(unittest.TestCase):

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test_local_flooding(self):
        seq = "AAAGCCGCCUUAAGCCUACUUAGAUGGAAGUGACGUACGGGUAUUGGUACACGAUUUUAC"
        [ss, en] = ['...((........))...........(((((...((((........))))...)))))..', -9.30]
        minh = 1

        # Set model details.
        vrna_md = RNA.md()
        vrna_md.noLP = 0
        vrna_md.temperature = 25
        vrna_md.dangles = 2
        vrna_md.logML = 0
        vrna_md.special_hp = 1
        vrna_md.noGU = 0
        
        fc = RNA.fold_compound(seq, vrna_md)

        macro, fstep = local_flooding(fc, ss, minh = minh, rates = False)

        for m in macro:
            em = round(fc.eval_structure(m), 2)
            assert em <= en + minh
        
        for m in fstep:
            em = round(fc.eval_structure(m), 2)
            assert em > en + minh

    def dont_test_path_flooding(self):
        """testing:"""
        seq = "AAAGCCGCCUUAAGCCUACUUAGAUGGAAGUGACGUACGGGUAUUGGUACACGAUUUUAC"
        path = [('......((.....)).(((((......)))))..((((........))))..........',  -9.56), # L0013
                ('.......(.....)..(((((......)))))..((((........))))..........',  -5.87), # S
                ('................(((((......)))))..((((........))))..........',  -8.97), # I
                ('....(........)..(((((......)))))..((((........))))..........',  -6.31), # S
                ('...((........)).(((((......)))))..((((........))))..........', -10.00), # L0010
                ('...((........))..((((......))))...((((........))))..........',  -8.90), # I
                ('...((........))...(((......)))....((((........))))..........',  -7.29), # I
                ('...((........))...((........))....((((........))))..........',  -5.60), # I
                ('...((........))...(..........)....((((........))))..........',  -2.88), # S
                ('...((........))...................((((........))))..........',  -6.81), # I # local minimum
                ('...((........))...............(...((((........))))...)......',  -3.32), # S
                ('...((........))..............((...((((........))))...)).....',  -5.17), # I
                ('...((........)).............(((...((((........))))...)))....',  -5.87), # I
                ('...((........))............((((...((((........))))...))))...',  -6.99), # I
                ('...((........))...........(((((...((((........))))...)))))..',  -9.30), # L0017
                ('....(........)............(((((...((((........))))...)))))..',  -5.61), # S
                ('..........................(((((...((((........))))...)))))..',  -8.27), # I
                ('.............(....).......(((((...((((........))))...)))))..',  -5.22), # S
                ('............((....))......(((((...((((........))))...)))))..',  -6.67), # I
                ('...........(((....))).....(((((...((((........))))...)))))..',  -7.97), # I
                ('..........((((....))))....(((((...((((........))))...)))))..',  -9.38), # I
                ('.........(((((....)))))...(((((...((((........))))...)))))..', -10.08), # I
                ('.....(...(((((....)))))..)(((((...((((........))))...)))))..',  -8.20), # S
                ('.....((..(((((....))))).))(((((...((((........))))...)))))..',  -8.90), # I
                ('.....((...((((....))))..))(((((...((((........))))...)))))..',  -8.20), # S
                ('.....((.(.((((....))))).))(((((...((((........))))...)))))..',  -9.69), # I
                ('.....((.(.((((....))))).)).((((...((((........))))...))))...',  -7.38), # S
                ('....(((.(.((((....))))).)))((((...((((........))))...))))...', -10.94)] # L0001

        lmins, ssmap = path_flooding(path, minh = 3)

        for k,v in lmins.items():
            print(k, v)

        for k,v in sorted(ssmap.items()):
            print(k, v)
 


if __name__ == '__main__':
    unittest.main()
